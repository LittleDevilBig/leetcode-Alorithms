#include<iostream>
#include <cstdlib>
using namespace std;
int n, first[50], last[50], ans = 0,m,x;
char c[] = { 'A','B','C' };
bool check()
{
	if (n != 3) return false;
	if (first[1] != 2) return false;
	if (first[2] != 2) return false;
	if (first[3] != 0) return false;
	if (last[1] != 0) return false;
	if (last[2] != 0) return false;
	if (last[3] != 2) return false;
	return true;
}
void special()
{
	printf("move 3 from A to B\n");
	printf("move 1 from C to B\n");
	printf("move 2 from C to A\n");
	printf("move 1 from B to A\n");
	printf("move 3 from B to C\n");
	printf("5");
	exit(0);
}
void dfs(int x, int y) {
	if (first[x] == y) return;
	for (int i = x - 1; i > 0; i--)
		dfs(i, 3 - (first[x] + y));
	cout << "move " << x << " from " << c[first[x]] << " to " << c[y] << endl;
	first[x] = y;
	ans++;
}
int main() {
	cin >> n;
	for (int i=0; i < 3; i++) {
		cin >> m;
		for (int j = 0; j < m; j++) {
			cin >> x;
			first[x] = i;
		}
	}
	for (int i = 0; i < 3; i++) {
		cin >> m;
		for (int j = 0; j < m; j++) {
			cin >> x;
			last[x] = i;
		}
	}
	if (check()) special();
	for (int i = n; i > 0; i--)
		dfs(i, last[i]);
	cout << ans;
}
