#include<iostream>
#include<algorithm>
using namespace std;
int a[70],t,cur,m=0,minn;
bool c[70];
bool f(int x,int y,int z){
	if (z == t) return true;
	if (!x) return f(cur, m - 1, z + 1);
	if (x < minn || y < 0) return false;
	for (int i = y; i >= 0; i--) {
		if (c[i] && x >= a[i]) {
			c[i] = false;
			if (f(x - a[i], i - 1, z)) return true;
			c[i] = true;
			if (x == a[i] || x == cur) break;//只能拼出一根棍，不能拼出一根棍
			while (i - 1 > 0 && a[i - 1] == a[i]) i--;
		}
	}
	return false;
}
int main() {
	int n,b,sum=0,ans=0;
	cin >> n;
	for (int i = 0; i < n; i++) {
		cin >> b;
		if (b <= 50) { a[m++] = b; sum += b; }
	}
	sort(a, a + m);
	for (cur = a[m - 1], minn = a[0]; cur <= sum / 2; cur++) {
		if (sum%cur) continue;
		t = sum / cur;
		for (int i = 0; i < m; i++) c[i] = true;
		if (f(cur,m-1,0)) { ans = cur; break; }
	}
	if (!ans) cout << sum;
	else cout << ans;
}
