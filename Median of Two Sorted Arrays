class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m=nums1.size(),n=nums2.size(),maxl,minr;
        if(m<n)  return findMedianSortedArrays(nums2, nums1);
        if(n==0) {
            if(m%2==1) return nums1[m/2];
            else return (nums1[m/2-1]+nums1[m/2])/2.0;
        }
        int imin=0,imax=m;
        while(imin<=imax){
            int i=(imin+imax)/2;
            int j=(m+n+1)/2-i;
            if(j>0&&i<m&&nums2[j-1]>nums1[i])//i 小
                imin++;
            else if(j<n&&i>0&&nums1[i-1]>nums2[j])//i 大
                imax--;
            else {
                if(i==0) maxl=nums2[j-1];
                else if(j==0) maxl=nums1[i-1];
                else maxl=max(nums1[i-1],nums2[j-1]);
                if((m+n)%2==1) return maxl;
                if(i==m) minr=nums2[j];
                else if(j==n) minr=nums1[i];
                else minr=min(nums2[j],nums1[i]);
                return (maxl+minr)/2.0;
            }
        }return -1;
    }
};
