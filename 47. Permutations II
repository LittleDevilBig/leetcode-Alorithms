class Solution {
public:
    vector<vector<int>> permuteUnique(vector<int>& nums) {
        vector<vector<int>> ans;
        sort(nums.begin(), nums.end());
        dp(nums,0,ans);
        return ans;
    }
    void dp(vector<int>& nums,int begin,vector<vector<int>>& ans){
        if(begin>=nums.size()){
            ans.push_back(nums);
            return;
        }
        for(int i=begin;i<nums.size();i++){
            if(i!=begin&&nums[i]==nums[begin]) continue;
            swap(nums[i],nums[begin]);
            dp(nums,begin+1,ans);
            //swap(nums[i],nums[begin]);
        }
        for (int i = nums.size() - 1; i > begin; i--) {
                swap(nums[begin], nums[i]);
            }
    }
};
