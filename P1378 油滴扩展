#include<iostream>
#include<algorithm>
#include<cmath>
#define PI 3.1415926535
using namespace std;
struct xy {
	double x, y;
}p[10];
int n;
bool u[10];
double ans=0x7fffffff, d[10][10], r[10] = { 0 }, minx, miny, maxx, maxy;
void f(int num,double area) {
	if (num == n) { ans = min(area, ans); return; }
	for (int i = 0; i < n; i++) {
		if (!u[i]) {
			u[i] = true;
			bool flag = false;
			for (int j = 0; j < n; j++) {
				if (j != i && d[i][j] <= r[j]) { flag = true; break; }
			}
			if (flag) f(num + 1, area);
			else {
				r[i] = min(min(p[i].y - miny, maxy - p[i].y), min(p[i].x - minx, maxx - p[i].x));
				for (int j = 0; j < n; j++)
					if (j != i && r[j])r[i] = min(r[i], d[i][j] - r[j]);

				f(num + 1, area - PI * r[i] * r[i]);
				r[i] = 0;
			}
			u[i] = false;
		}
	}
}
int main() {
	double x1, y1, x2, y2;
	cin >> n>>x1>>y1>>x2>>y2;
	x1 += 1000;
	y1 += 1000;
	x2 += 1000;
	y2 += 1000;
	minx = min(x1, x2);
	miny = min(y1, y2);
	maxx = max(x1, x2);
	maxy = max(y1, y2);
	for (int i = 0; i < n; i++) {
		cin >> p[i].x >> p[i].y;
		p[i].x += 1000;
		p[i].y += 1000;
		u[i] = false;
	}
	for (int i = 0; i < n; i++)
		for (int j = 0; j < n; j++) {
			if (i == j) d[i][j] = 0;
			else d[i][j] = sqrt((p[i].x - p[j].x)*(p[i].x - p[j].x) + (p[i].y - p[j].y)*(p[i].y - p[j].y));

		}
	f(0, (maxx - minx)*(maxy - miny));
	cout << (int)(ans + 0.5);
}
