/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
    ListNode* reverse(ListNode* first, ListNode* last) {
        ListNode* pre=last;
        while(first!=last){
            auto tmp=first->next;
            first->next=pre;
            pre=first;
            first=tmp;
        }
        return pre;
    }
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        auto node=head;
        for(int i=0;i<k;i++){
            if(!node)
                return head;
            node=node->next;
        }
        auto newh=reverse(head,node);
        head->next=reverseKGroup(node,k);
        return newh;
    }
};
